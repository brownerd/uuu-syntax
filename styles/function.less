// .class selects
//   CSS - classes
//   Less - classes
//   SCSS - classes
//   Stylus - classes
//   HTML - src="", stuff between script tag
//   Jade - classes
//   JS - classes
//   JSON - none
//   MD - snippets inside ``` ``` blocks
//   PHP - classes
//   Vue - none
//   YAML - none

.syntax--class,
.syntax--entity.syntax--other.syntax--inherited-class.syntax--scala,
.syntax--storage.syntax--type.syntax--cpp {
  //.test();
  color: @class-color;
  font-style: @class-fontstyle;
  font-weight: @class-weight;
}

.syntax--constructor.syntax--js {
  // .test();
  //color: spin(@class-color, 180);
  // font-style: @class-fontstyle;
  // font-weight: @class-weight;
}


// .function selects
//   JS - function name and keyword but not it's content
//   SCSS - same
//   stylus - same
//   PHP same

// .syntax--entity.syntax--name.syntax--function.syntax--stylus
.syntax--source .syntax--function,
.syntax--source.syntax--js,
.syntax--function.syntax--name,
.syntax--function.syntax--go,
.syntax--function.syntax--any-method,
.syntax--entity.syntax--global.syntax--clojure,
.syntax--entity.syntax--other.syntax--inherited-class.syntax--haskell {
  //.test();
  color: @functionname-color;
  font-style: @functionname-fontstyle;
  font-weight: @functionname-weight;
}


.syntax--console.syntax--js {
  color: @consolelog-color;
  font-style: @consolelog-fontstyle;
  font-weight: @consolelog-weight;
}


// Methods in js
.syntax--support.syntax--function {
  //.test();
}


// .parameters selects a functions params
//   JS - (), (params)
//   SCSS - ","
.syntax--parameters {
  //.test();
  //I'm going to let storage handle this
}


// .function-call selects the function call  blah(1, 3);
.syntax--function-call {
  //.test();
}


// .method-call selects the whole method call
.syntax--method-call,
.syntax--meta.syntax--symbol.syntax--clojure {
  //.test();
  // color: @method-color;
  // font-style: @method-fontstyle;
  // font-weight: @method-weight;
}


// .arguments selcts the arguments of a function call
.syntax--arguments {
  //.test();
  //im going to let storage handle this
}


// .constructor selects constructors in JS
.syntax--function.syntax--name.syntax--constructor {
  //.test();
  color: @constructor-color;
  font-style: @constructor-fontstyle;
  font-weight: @constructor-weight;
}


// .instance selects new Error, new RegEx in JS
.syntax--instance {
  //.test();
  color: @instance-color;
  font-style: @instance-fontstyle;
  font-weight: @instance-weight;
}
