// http://manual.macromates.com/en/language_grammars.html#naming_conventions



.syntax--module,
.syntax--meta.syntax--using.syntax--cs,
.syntax--storage.syntax--import.syntax--java {
  // .test();
  color: @module-color;
  font-style: @module-fontstyle;
  font-weight: @module-weight;
}


// .keyword.cs,
// .keyword.java,
// .keyword.hs,
// .keyword.py


.syntax--namespace {
  color: @namespace-color;
  font-style: @namespace-fontstyle;
  font-weight: @namespace-weight;
}


// .constant selects
//   CSS - bold, italics, underline, auto keywords
//   HTML - html Entities
//   Jade - ( and )
//   JS - Numbers, True/False, any named const
//   JSON - None
//   MD - None
//   PHP - Numbers
//   SCSS - :
//   Stylus - Numbers, Booleans, null
//   Vue - Nothing
//   YAML - :

.syntax--constant {
  // .test();
  color: @constant-color;
  font-weight: @constant-weight;
}



.syntax--constant.syntax--boolean {
  // .test();
  color: @boolean-color;
  font-style: @boolean-fontstyle;
  font-weight: @boolean-weight;
}



// Check only-html.less for use of this class
.syntax--attribute-name {
  // .test();
}


// .type selects
//   CSS - Property name
//   HTML - Nothing
//   Jade - block, include, if, each, var keywords
//   JS - function, var, console, =>, Error keywords
//   JSON - None
//   MD - None
//   PHP - class, function keywords
//   SCSS - Property names
//   Stylus - Property name
//   Vue - Nothing
//   YAML - Nothing

.syntax--name.syntax--type.syntax--cpp,
.syntax--type.syntax--haskell,
.syntax--type.syntax--elm {
  // .test();
  color: @type-color;
  font-style: @type-fontstyle;
  font-weight: @type-weight;
}

.syntax--identifier.syntax--haskell {
  // .test();
  color: @identifier-color;
  font-style: @identifier-fontstyle;
  font-weight: @identifier-weight;
}





// .object selects commas in an object and the object name before the delimiter
// like object.thing in JS
.syntax--object {
  //.test();
}


.syntax--array {
  //.test();
}




//.body selects the function bodies Curly Brackets {}
.syntax--body {
  //.test();
}





// .language selects
//   Stylus - false, true, null
//   JS - false, true, null
//   PHP - false, true, null
.syntax--language {
  //.test();
}


// selects false and true
.syntax--boolean {
  //.test();
}


// selects true
.syntax--true {}


// selects false
.syntax--false {}



// Source will select everything that is source code of a specified grammar
// It's a way to also set a base color for all grammars
.syntax--source {
  color: @editor-color;
}




// Discovery


// This selects many things:
//   CSS - declarations
//   HTML - Tags
//   JS - Funciton name and params, open and closing (), and "."
//   Jade - Block statement, Include statement, ".",
//   JSON - it selectes the entire object
//   MD - it selects everything between ``` ```
//   PHP - Everything, Tags, Variables, classes, comments
//   SCSS - Everything. Entire declaration
//   Stylus - properties and values
//   Vue- Tags, function names, declarations
//   Yaml - nothing



// I'm not sure that I need to style with this yet
.syntax--meta {}





// .entity selects a lot of stuff
//   CSS - Selector name
//   HTML - Tag name and Attribute name
//   Jade - Tag name and Attribute name
//   JS - Variable name and function name
//   JSON - nothing
//   MD - Link Text
//   PHP - Class names NO variable names
//   SCSS - Selector name
//   Stylus - Selector name, function name, anything following a "."
//   Vue - Selector name, tag name,function name
//   YAML - Property names

.syntax--entity {
  // .test();
}






// .name selects
//   TreeView - text
//   CSS - Selector name
//   HTML - Tag name only
//   Jade - Tag name and function name
//   JS - Function name and variable name
//   JSON - nothing
//   MD - nothing
//   PHP - Class name
//   SCSS - Mixin name and Function name
//   Stylus - Function name
//   Vue - Tag name, Function name, Selector name
//   Yaml - Property name

.syntax--name {
  // .test();
}





// .tag selects
//   CSS - Selector name
//   HTML - Entire tag
//   Jade - Entire tag, Blocks and Includes
//   JS - Nothing
//   JSON - Nothing
//   MD - Nothing
//   PHP - Nothing except HTML in PHP
//   SCSS - Nothing
//   Stylus - Nothing
//   Vue - Selector name, tag name,function name
//   YAML - Property names

.syntax--tag {
  // .test();
}





// .section selects
//   CSS - {} ()
//   HTML -
//   Jade -
//   JS -
//   JSON -
//   MD -
//   PHP - <?php ?> {} []
//   SCSS - {} []
//   Stylus - ()
//   Vue - {} on style sections
//   YAML - Nothing

.syntax--section {
  // .test();
}




// .support selects
//   CSS - Property and value strings
//   HTML - Nothing
//   Jade - Nothing
//   JS - require, module, export, log, method names
//   JSON - None
//   MD - None
//   PHP - define, echo, array, built-in functions
//   SCSS - true, function names
//   Stylus - Property name
//   Vue - {} on style sections
//   YAML - Nothing

.syntax--support {
  // .test();
}









.syntax--modifier {
  //.test();
}
