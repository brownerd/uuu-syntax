// http://manual.macromates.com/en/language_grammars.html#naming_conventions

// JS stuff

// .class selects
//   CSS - classes
//   Less - classes
//   SCSS - classes
//   Stylus - classes
//   HTML - src="", stuff between script tag
//   Jade - classes
//   JS - classes
//   JSON - none
//   MD - snippets inside ``` ``` blocks
//   PHP - classes
//   Vue - none
//   YAML - none

.class {
  //.test();
}




// .storage selects
//   CSS - none
//   Less - none
//   SCSS - none
//   Stylus - none
//   HTML - src="", stuff between script tag
//   Jade - variable name and assignment
//   JS - function, var, const, let, =>
//   JSON - none
//   MD - snippets inside ``` ``` blocks
//   PHP - class, private, public, function keywords
//   Vue - none
//   YAML - none
.storage {
  //.test();
}


// Selects var and let keyword JS and Jade
.var {
  //.test();
}


// .assignment selects
//   JS - =
//   PHP - =
.assignment {
  //.test();
}




// .brace selects {} [] () in JS
.brace {
  //.test();
}


// .bracket selects {} () in JS
.bracket {
  //.test();
}


// .curly selects {} in JS
.curly {
  //.test();
}

// .round selects round brackets
.round {
  //.test();
}


//.square selects square brackets
.square {
  //.test();
}





//.delimeter selects "." and "," in JS
.delimiter {
  //.test();
}


// .object selects commas in an object and the object name before the delimiter
// like object.thing in JS
.object {
  //.test();
}


.array {
  //.test();
}

// .comma selects commas in JS
.comma {
  //.test();
}


// .keyword selects
//   CSS - %, em, px, rem
//   SCSS - @return @if !default, all @ based keywords
//   stylus - if, to, from, =, px, rem, return, unless ?=, +, @media
//   JS - new, !, !!, import, return, +, :, typeof, switch, case, etc
//   PHP - switch, case, if, return, else, ->, endif, while, endwhile
//
.keyword {
  //.test();
}


// .control
//   JS - if, else, return, import, case, break
//   PHP - if, else, return, import, case, break
.control {
  //.test();
}


//.body selects the function bodies Curly Brackets {}
.body {
  //.test();
}


// .operator selects
//   SCSS - on, >, <, in, or, ==, !==
//   Stylus - in, not, or, is, +, *, ?=, and
.operator {
  //.test();
}


// .logical selects
//   JS - !, &&, ||
.logical {
  //.test();
}




// .typeof selects typeof in JS
.typeof {
  //.test();
}



// .comparison selests >, <, ==, !==
.comparison {
  //.test();
}



// .function selects
//   JS - function name and keyword but not it's content
//   SCSS - same
//   stylus - same
//   PHP same
.function {
  //.test();
}


// .parameters selects a functions params
//   JS - (), (params)
//   SCSS - ","
.parameters {
  //.test();
}



// .function-call selects the function call  blah(1, 3);
.function-call {
  //.test();
}


// .method-call selects the whole method call
.method-call {
  //.test();
}


// .decimal selects numbers in JS
.decimal {
  //.test();
}


// .arguments selcts the arguments of a function call
.arguments {
  //.test();
}


// .constructor selects constructors in JS
.constructor {
  //.test();
}


// .instance selects new Error, new RegEx in JS
.instance {
  //.test();
}


// .double-slash selects double-slash in LESS, Stylus, JS and PHP
.double-slash {
  //.test();
}


// i'm not sure. this looks like it selects RegEx stuff
.quantifier {
  //.test();
}


// selects regular expression in JS
.regexp {
  //.test();
}


// selects the "." in JS and JADE
.period {
  //.test();
}



// .language selects
//   Stylus - false, true, null
//   JS - false, true, null
//   PHP - false, true, null
.language {
  //.test();
}


// selects false and true
.boolean {
  //.test();
}


// selects true
.true {}


// selects false
.false {}



// Source will select everything that is source code
.source {}




// Discovery


// This selects many things:
//   CSS - declarations
//   HTML - Tags
//   JS - Funciton name and params, open and closing (), and "."
//   Jade - Block statement, Include statement, ".",
//   JSON - it selectes the entire object
//   MD - it selects everything between ``` ```
//   PHP - Everything, Tags, Variables, classes, comments
//   SCSS - Everything. Entire declaration
//   Stylus - properties and values
//   Vue- Tags, function names, declarations
//   Yaml - nothing



// I'm not sure that I need to style with this yet
.meta {}





// .entity selects a lot of stuff
//   CSS - Selector name
//   HTML - Tag name and Attribute name
//   Jade - Tag name and Attribute name
//   JS - Variable name and function name
//   JSON - nothing
//   MD - Link Text
//   PHP - Class names NO variable names
//   SCSS - Selector name
//   Stylus - Selector name, function name, anything following a "."
//   Vue - Selector name, tag name,function name
//   YAML - Property names

.entity {
  // .test();
}






// .name selects
//   TreeView - text
//   CSS - Selector name
//   HTML - Tag name only
//   Jade - Tag name and function name
//   JS - Function name and variable name
//   JSON - nothing
//   MD - nothing
//   PHP - Class name
//   SCSS - Mixin name and Function name
//   Stylus - Function name
//   Vue - Tag name, Function name, Selector name
//   Yaml - Property name

.name {
  // .test();
}





// .tag selects
//   CSS - Selector name
//   HTML - Entire tag
//   Jade - Entire tag, Blocks and Includes
//   JS - Nothing
//   JSON - Nothing
//   MD - Nothing
//   PHP - Nothing except HTML in PHP
//   SCSS - Nothing
//   Stylus - Nothing
//   Vue - Selector name, tag name,function name
//   YAML - Property names

.tag {
  // .test();
}







// .section selects
//   CSS - {} ()
//   HTML -
//   Jade -
//   JS -
//   JSON -
//   MD -
//   PHP - <?php ?> {} []
//   SCSS - {} []
//   Stylus - ()
//   Vue - {} on style sections
//   YAML - Nothing

.section {
  // .test();
}




// .support selects
//   CSS - Property and value strings
//   HTML - Nothing
//   Jade - Nothing
//   JS - require, module, export, log, method names
//   JSON - None
//   MD - None
//   PHP - define, echo, array, built-in functions
//   SCSS - true, function names
//   Stylus - Property name
//   Vue - {} on style sections
//   YAML - Nothing

.support {
  // .test();
}




// .type selects
//   CSS - Property name
//   HTML - Nothing
//   Jade - block, include, if, each, var keywords
//   JS - function, var, console, =>, Error keywords
//   JSON - None
//   MD - None
//   PHP - class, function keywords
//   SCSS - Property names
//   Stylus - Property name
//   Vue - Nothing
//   YAML - Nothing

.type {
  // .test();
}


// .constant selects
//   CSS - bold, italics, underline, auto keywords
//   HTML - html Entities
//   Jade - ( and )
//   JS - Numbers, True/False, any named const
//   JSON - None
//   MD - None
//   PHP - Numbers
//   SCSS - :
//   Stylus - Numbers, Booleans, null
//   Vue - Nothing
//   YAML - :

.constant {
  // .test();
}


.modifier {
  //.test();
}



// .numeric selects numbers and in some cases units too
.numeric {
  //.test();
}
